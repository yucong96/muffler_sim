<!DOCTYPE html>
<html>
<head>
    <title></title>
    <style>canvas { width: 100%; height: 100% }</style>
    <script src="/static/js/three.js"></script>
    <script src="/static/js/VTKLoader.js"></script>
</head>
<body>
    <script>
        var scene = new THREE.Scene();
        
        var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.01, 1000);
        camera.position.z = 0.2;
	camera.lookAt(new THREE.Vector3(0, 0, 0));
	scene.add(camera);
	
        var renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        
        document.body.appendChild(renderer.domElement);

        var dirLight = new THREE.DirectionalLight( 0xffffff );
	dirLight.position.set( 200, 200, 1000 ).normalize();

	camera.add( dirLight );
	camera.add( dirLight.target );
	
        var material = new THREE.MeshLambertMaterial( { color: 0xffffff, side: THREE.DoubleSide } );

				var loader = new THREE.VTKLoader();
				loader.load( "static/model/test2.vtk", function ( geometry ) {

					geometry.center();
					geometry.computeVertexNormals();

					var mesh = new THREE.Mesh( geometry, material );
					mesh.position.set( 0, 0, 0 );
					mesh.scale.multiplyScalar( 0.4 );
					scene.add( mesh );

				} );
	
        //var geometry = new THREE.CubeGeometry(1,1,1);
        //var material = new THREE.MeshBasicMaterial({color: 0x00ff00});
        //var cube = new THREE.Mesh(geometry, material);
	//scene.add(cube);
        
        function render() {
            requestAnimationFrame(render);
            //cube.rotation.x += 0.1;
            //cube.rotation.y += 0.1;
            renderer.render(scene, camera);
        }
        render();
    </script>
</body>
</html>
